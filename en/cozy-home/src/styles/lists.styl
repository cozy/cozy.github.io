$app-tile-size = 4rem
$app-grid-gutter = 2rem
$mobile-grid-gutter = 1rem
$mobile-tile-size = 4rem
$tablet-tile-size = 4rem
$app-tile-with-gutter = $app-tile-size + $app-grid-gutter
$mobile-tile-with-gutter = $mobile-tile-size + $mobile-grid-gutter
$tablet-tile-with-gutter = $tablet-tile-size + $app-grid-gutter

.app-list, .services-list, .shortcuts-list
    width 100%
    max-width 'calc(%s * 8 + %s * 7 + 4rem)' % ($app-tile-size $app-grid-gutter) // 8 columns + 7 column gaps + border gaps
    display grid
    grid-template-columns repeat(auto-fill, minmax($app-tile-with-gutter, 1fr))
    grid-auto-rows minmax(rem(91), auto)
    grid-gap rem(14) 0
    justify-content center
    margin-bottom rem(14)

    &--gutter
        grid-gap rem(14) 1rem

    // Caution: this section is full of magic numbers
    // TODO: refactor this to use computed values to avoid glitches in the grid system
    &.detailed
        grid-template-columns repeat(3, minmax(0, 1fr))
        column-gap $app-grid-gutter
        width: calc(100% - 2rem) !important // @stylint ignore

    +small-screen()
        grid-template-columns repeat(auto-fill, minmax($mobile-tile-with-gutter, 1fr))
        grid-auto-rows minmax(rem(68), auto)
        grid-gap rem(5) 0

        &.detailed
            grid-template-columns minmax(0, 1fr)
            column-gap 0
            width: calc(100% - 1.25rem) !important // @stylint ignore

        div[class*='MuiGrid-grid-xs']
            padding 2px

    // 480px to 768px
    @media (min-width: rem(size-helper('min', BP-tiny))) and (max-width: rem(size-helper('max', BP-small)))
        grid-template-columns repeat(auto-fill, minmax($tablet-tile-with-gutter, 1fr))

        &:not(.detailed)
            div[class*='tileWrapper']
                width 5.25rem // Need this to align the tiles with the grid

        &.detailed
            // The exact min value does not need to be computed, 5rem is enough to handle the transition from 480 to 500px
            grid-template-columns repeat(2, minmax(5rem, 1fr))
            width: calc(100% - 2.25rem) !important // @stylint ignore

    .item-grid-icon
        width rem(16)
        height rem(16)

        +small-screen()
            width rem(12)
            height rem(12)

        &.ghost
            filter saturate(0)

    a
        text-decoration none
        -webkit-tap-highlight-color transparent // https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-tap-highlight-color

// Hacks specific to categories display, at this point it decided not to modify cozy-ui

// The CSS grid is no good in modal display because of the fluid width
// To handle a more fixed design, we're using flexbox instead
.dialogContentWrapper .shortcuts-list:not(.detailed)
    display flex
    flex-wrap wrap
    align-items flex-start
    justify-content space-between
    // @stylint off
    width calc(100% + 2rem) !important
    // @stylint on
    margin-left -1rem

    &:after
        content ''
        flex auto

// Grid alignment for group of 1 to 4 apps icons
div[class*='SquareAppIcon-icon-container'] .section-app-group
    align-self flex-start
    align-items flex-start
    justify-content flex-start

// Color issue with SquareAppIcon in detailed mode (appears blue)
.shortcuts-list span[class*='MuiListItemText-primary']
    color var(--primaryTextColor)
    font-weight 700

// End of categories display hacks

.app-list-wrapper, .services-list-wrapper, .shortcuts-list-wrapper, .failure-wrapper
    max-width 50rem
    transition height 200ms ease

.EmptyServicesListTip
    box-sizing border-box
    width 640px
    max-width 100%
    margin auto
    padding 1rem 2rem

    +small-screen()
        padding 0 1.5rem 1rem 3rem

.EmptyServicesListTip-text
    font-style italic
    padding-left 1rem

    +small-screen()
        padding-left .5rem

.scale-hover
    transition transform 50ms ease

.scale-hover:hover
    transform scale(1.0625)

.section-app-group-grid
    display flex
    align-items center

.section-app-group-icon
    display block

.section-app-group-tile
    display flex
    justify-content center
    width 100%
    align-items center
    min-width 14px
